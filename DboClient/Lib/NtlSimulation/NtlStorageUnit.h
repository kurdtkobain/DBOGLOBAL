//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : CNtlStorageUnit.h
//  @ Date : 2009-01-22
//  @ Author : 
//
//


#if !defined(_CNTLSTORAGEUNIT_H)
#define _CNTLSTORAGEUNIT_H

#include "NtlStorageSerializer.h"
#include "NtlStorageDefine.h"

#include <map>
 

class CNtlStorageUnit
{
public:
	typedef std::map<unsigned int, std::string> DATAMAP;

public:
	CNtlStorageUnit();
	~CNtlStorageUnit();

	bool Create(eNTL_STORAGE_TYPE eType);
	void Destroy();

	bool				Reset();
	
	bool				GetData(unsigned int uiKey, std::string& strOut);
	bool				SetData(unsigned int uiKey, std::string strData);
	
	eNTL_STORAGE_TYPE	GetType();

	void				UnitCheck();

	DATAMAP				m_mapStorageData;

	eNTL_STORAGE_TYPE	m_eStorageType;

	NtlStorageUnitApplyFunc	GetApplyFunc();
	bool					SetApplyFunc(NtlStorageUnitApplyFunc func);

	bool					Apply( unsigned int uiFlags );
	
public:
	// 검증된 Key만 사용할 수 있음
	bool				GetBoolData(unsigned int uiKey);
	int					GetIntData(unsigned int uiKey);
	float				GetFloatData(unsigned int uiKey);
	std::string			GetStringData(unsigned int uiKey);

protected:
	NtlStorageUnitApplyFunc m_unitApplyFunc;
};

#endif  //_CNTLSTORAGEUNIT_H
