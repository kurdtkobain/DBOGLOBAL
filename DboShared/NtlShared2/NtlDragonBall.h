#pragma once
//updated 4.12.2014
#include "NtlSharedType.h"
#include "NtlItem.h"

#pragma pack(1)
enum eSCHEDULE_EVENT_TYPE
{
	SCHEDULE_EVENT_TYPE_BASIC_DRAGONBALL,			// Basic Dragon Ball collection
	SCHEDULE_EVENT_TYPE_NORMAL_DRAGONBALL,
	SCHEDULE_EVENT_TYPE_LEGENDARY_DRAGONBALL,
	SCHEDULE_EVENT_TYPE_EVENT_DRAGONBALL,
	SCHEDULE_EVENT_TYPE_BATTLE_DRAGONBALL,

	SCHEDULE_EVENT_TYPE_COUNT,

	SCHEDULE_EVENT_TYPE_FIRST = SCHEDULE_EVENT_TYPE_BASIC_DRAGONBALL,
	SCHEDULE_EVENT_TYPE_LAST  = SCHEDULE_EVENT_TYPE_BATTLE_DRAGONBALL,
};

struct sSCHEDULE_INFO
{
	BYTE					byEventType;			//eSCHEDULE_EVENT_TYPE
	__int64					nStartTime;
	__int64					nEndTime;
	int						nMainTerm;
	int						nSubTerm;
	BYTE					byTermType;			//eSCHEDULE_TERM_TYPE
	sDBO_TIME				tCreateTime;
};

enum eCOLLECT_STATE
{
	COLLECT_STATE_NONE	= 0,
	COLLECT_STATE_DB_UI_OK,
	COLLECT_STATE_DRAGON_OUT,
	COLLECT_STATE_DRAGON_DESPAWN,

	COLLECT_STATE_COUNT,

	COLLECT_STATE_FIRST = COLLECT_STATE_DB_UI_OK,
	COLLECT_STATE_LAST  = COLLECT_STATE_DRAGON_DESPAWN,
	
};
struct sCOLLECT_BRIEF
{
	CHARACTERID			charId;		// 
	BYTE				byState;	// Progress
	DWORD				dwTick;		// Processing time
	HOBJECT				hDragon;	// shenron handle
	sITEM_DELETE_DATA	asData[NTL_ITEM_MAX_DRAGONBALL];	// Dragon ball to be cleared
	HOBJECT				hAltar;
	BYTE				byBallType;
};

enum eDRAGONBALL_REWARD_TYPE
{
	DRAGONBALL_REWARD_TYPE_ITEM,
	DRAGONBALL_REWARD_TYPE_SKILL,
	DRAGONBALL_REWARD_TYPE_ZENNY,
	DRAGONBALL_REWARD_TYPE_HTB,
};

enum eDRAGON_BALL_TYPE
{
	DRAGON_BALL_TYPE_NONE = 0,
	DRAGON_BALL_TYPE_BASIC,
	DRAGON_BALL_TYPE_NORMAL,
    DRAGON_BALL_TYPE_LEGENDARY,
    DRAGON_BALL_TYPE_EVENT,
	DRAGON_BALL_TYPE_BATTLE,

    DRAGON_BALL_TYPE_COUNT,
	DRAGON_BALL_TYPE_FIRST = DRAGON_BALL_TYPE_BASIC,
	DRAGON_BALL_TYPE_LAST = DRAGON_BALL_TYPE_BATTLE,
};

const unsigned int	DBO_MAX_TIMER_DB_UI_OK = 3 * 60 * 1000;		// 3Minute

const unsigned int	DBO_MAX_TIMER_DRAGON_OUT = 6000;			// 10Second

const unsigned int	DBO_MAX_TIMER_DRAGON_DESPAWN = 6000;		// 5Second

const unsigned int	DBO_MAX_DRAGONBALL_BASIC_MOB_LEVEL = 20;	// 20 레벨 미만만 

const unsigned int	DBO_DRAGONBALL_SCRAMBLE_JOIN_LEVEL = 45;
const unsigned int	DBO_DRAGONBALL_SCRAMBLE_JOIN_BONUS = 15;

const BYTE			DBO_MAX_WORLD_DRAGONBALLDROP = 5;

const BYTE			DBO_DRAGONBALL_EVENT_DROP_LEVEL_DIFF = 5;


enum eDRAGONBALLSCRAMBLE_MESSAGE
{
	DRAGONBALLSCRAMBLE_MESSAGE_ENTER_PK_FORBIDDEN_AREA = 0,
	DRAGONBALLSCRAMBLE_MESSAGE_ADD_MUDOSA_POINT,
	DRAGONBALLSCRAMBLE_MESSAGE_PARTY_LEAVE,
};


#pragma pack()
//-----------------------------------------------------------------------------------